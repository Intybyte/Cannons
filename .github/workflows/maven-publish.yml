# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B -q package --file pom.xml --settings $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
      continue-on-error: true  # allow workflow to continue so we can post failure message
      env:
        TOKEN: ${{ secrets.TOKEN }}

    - name: Publish to GitHub Packages Apache Maven
      if: ${{ success() && steps.build.outcome == 'success' }}
      run: mvn deploy -pl cannons-bukkit -am --settings $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
      env:
        TOKEN: ${{ secrets.TOKEN }}

    - name: Get artifact download URL
      id: get-artifact-url
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}
        RUN_ID: ${{ github.run_id }}
      run: |
        echo "Fetching artifacts for run $RUN_ID"
        ARTIFACTS_JSON=$(curl -sSL -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/artifacts")

        # Find the artifact id by name, assuming you know the exact artifact name or take the first one
        ARTIFACT_ID=$(echo "$ARTIFACTS_JSON" | jq -r '.artifacts[] | select(.name=="cannons-bukkit'${{ github.event.number }}'-'${{ env.SHORT_COMMIT_HASH }}'") | .id')

        # Fallback to first artifact if name match fails
        if [ -z "$ARTIFACT_ID" ] || [ "$ARTIFACT_ID" == "null" ]; then
          ARTIFACT_ID=$(echo "$ARTIFACTS_JSON" | jq -r '.artifacts[0].id')
        fi

        if [ -z "$ARTIFACT_ID" ] || [ "$ARTIFACT_ID" == "null" ]; then
          echo "No artifact found"
          exit 1
        fi

        DOWNLOAD_URL="https://github.com/$REPO/suites/$RUN_ID/artifacts/$ARTIFACT_ID"
        echo "Artifact download URL: $DOWNLOAD_URL"

        echo "artifact_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

    - name: Comment success on PR
      if: ${{ steps.build.outcome == 'success' }}
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ✅ Build succeeded!  
          Download the artifact [here](${{ steps.get-artifact-url.outputs.artifact_url }})

    - name: Comment failure on PR
      if: ${{ steps.build.outcome != 'success' }}
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ❌ Build failed. 
          Please check the logs [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
